---




# https://docs.ansible.com/ansible/latest/modules/group_module.html
- name:
    "group : ensure airflow group exists"
  group:
    name: "{{ airflow_group }}"
  become:
    true

# https://docs.ansible.com/ansible/latest/modules/user_module.html
- name:
    "user : ensure airflow user exists"
  user:
    name: "{{ airflow_user }}"
    group: "{{ airflow_group }}"
    shell: "/bin/bash"
  become:
    true

# https://docs.ansible.com/ansible/latest/modules/file_module.html
- name:
    "file : ensure airflow directories exist"
  file:
    path: "{{ item }}"
    state: "directory"
    owner: "{{ airflow_user }}"
    group: "{{ airflow_group }}"
  with_items:
    - "{{ airflow_dags_dir }}"
    - "{{ airflow_example_dags_dir }}"
    - "{{ airflow_home_dir }}"
    - "{{ airflow_logs_dir }}"
    - "{{ airflow_plugins_dir }}"
  become:
    true

# https://docs.ansible.com/ansible/latest/modules/apt_module.html
- name:
    "apt : update"
  apt:
    update_cache: true
  become:
    true

# https://docs.ansible.com/ansible/latest/modules/apt_module.html
- name:
    "apt : ensure python tools present"
  apt:
    pkg: "{{ item }}"
    state: "present"
  with_items:
    - python3
    - python3-pip
  become:
    true

# https://docs.ansible.com/ansible/latest/modules/apt_module.html
- name:
    "apt : ensure POSIX.1e acl support installed"
  apt:
    # https://docs.ansible.com/ansible/latest/user_guide/become.html#becoming-an-unprivileged-user
    pkg: "acl"
    state: "present"
  become:
    true

# https://docs.ansible.com/ansible/latest/modules/template_module.html
- name:
    "template : ensure DAG example present"
  template:
    src: "example_dag.py.j2"
    dest: "{{ airflow_example_dags_dir }}/example_dag.py"
    mode: 0644
    owner: "{{ airflow_user }}"
    group: "{{ airflow_group }}"
  become:
    true



- name: Install psycopg2 package
  command: pip3 install psycopg2 

# AIRFLOW_GPL_UNIDECODE=yes is necessary starting with airflow 1.10.0
# https://github.com/apache/incubator-airflow/blob/748ad939f1eef2060f3ad1c689812bb14ca944f6/UPDATING.md
#
# https://docs.ansible.com/ansible/latest/modules/pip_module.html
- name:
    "pip : ensure airflow present"
  pip:
    executable: "pip3"
    name: "apache-airflow"
    version: "{{ airflow_version }}"
  environment:
    AIRFLOW_GPL_UNIDECODE: "yes"
  become:
    true

# https://docs.ansible.com/ansible/latest/modules/pip_module.html
- name:
    "pip : ensure extras present"
  pip:
    executable: "pip3"
    name: "{{ item }}"
    version: "{{ airflow_version }}"
  with_items:
    "{{ airflow_extra_packages }}"
  become:
    true
  notify:
    - "service : restart"


##########
#Configure
##########


# https://docs.ansible.com/ansible/latest/modules/lineinfile_module.html
- name:
    "lineinfile : ensure everyone uses main configuration"
  lineinfile:
    path: "/etc/environment"
    line: "AIRFLOW_HOME={{ airflow_home_dir }}"
  become:
    true

# https://docs.ansible.com/ansible/latest/modules/ini_file_module.html
- name:
    "ini_file : ensure configuration parameters present"
  ini_file:
    owner: "{{ airflow_user }}"
    path: "{{ airflow_home_dir }}/airflow.cfg"
    section: "{{ item.value['section'] | default('core') }}"
    state: "{{ item.value['state'] | default('present') }}"
    option: "{{ item.key }}"
    value: "{{ item.value['value'] | default(omit) }}"
  with_dict:
    "{{ airflow_configuration_defaults | combine(airflow_configuration) }}"
  become:
    true
  notify:
    - "service : restart"

# https://docs.ansible.com/ansible/latest/modules/command_module.html
- name:
    "command : initialize airflow database"
  command:
    "{{ airflow_executable }} initdb"
  register:
    "airflow_initdb_output"
  changed_when:
    "'Running upgrade' in airflow_initdb_output.stdout"
  environment:
    AIRFLOW_HOME: "{{ airflow_home_dir }}"
  become:
    true
  become_user:
    "{{ airflow_user }}"

# https://docs.ansible.com/ansible/latest/modules/script_module.html
- name:
    "script : ensure adminitrator user present"
  script: >
    "create_user_if_not_exists.py"
    "{{ airflow_admin_username }}"
    "{{ airflow_admin_email }}"
    "{{ airflow_admin_password }}"
  environment:
    AIRFLOW_HOME: "{{ airflow_home_dir }}"
  register:
    "create_user_output"
  changed_when:
    "'user created' in create_user_output.stdout"
  become:
    true
  become_user:
    "{{ airflow_user }}"

# https://docs.ansible.com/ansible/latest/modules/template_module.html
- name:
    "template : ensure logrotate configuration present"
  template:
    src: "webserver-logrotate.j2"
    dest: "/etc/logrotate.d/airflow"
    mode: 0644
  become:
    true

###########
#Service
###########
# https://docs.ansible.com/ansible/latest/modules/file_module.html
- name:
    "file : ensure airflow pid directory exists"
  file:
    path: "{{ airflow_pid_dir }}"
    state: "directory"
    owner: "{{ airflow_user }}"
    group: "{{ airflow_group }}"
  become:
    true

# https://docs.ansible.com/ansible/latest/modules/file_module.html
- name:
    "file : ensure systemd environment directory exists"
  file:
    path: "{{ airflow_systemd_environment_dir }}"
    state: "directory"
    owner: "root"
    group: "root"
  become:
    true

# https://docs.ansible.com/ansible/latest/modules/template_module.html
- name:
    "template : ensure systemd tmpfiles configuration present"
  template:
    src: "systemd-conf.j2"
    dest: "{{ airflow_systemd_tmpfiles_dir }}/airflow.conf"
    mode: 0644
    owner: "{{ airflow_user }}"
    group: "{{ airflow_group }}"
  become:
    true

# https://docs.ansible.com/ansible/latest/modules/template_module.html
- name:
    "template : ensure systemd environment file present"
  template:
    src: "systemd-env.j2"
    dest: "{{ airflow_systemd_environment_dir }}/airflow"
    mode: 0644
    owner: "{{ airflow_user }}"
    group: "{{ airflow_group }}"
  become:
    true

# https://docs.ansible.com/ansible/latest/modules/template_module.html
- name:
    "template : ensure service definitions present"
  vars:
    airflow_component_name: "{{ item.key }}"
    airflow_component_privatetmp:
      "{{ item.value['privatetmp'] | default(false) | string | lower }}"
  template:
    src: "systemd-service.j2"
    dest: "{{ airflow_systemd_lib_dir }}/airflow-{{ item.key }}.service"
    mode: 0644
    owner: "root"
    group: "root"
  with_dict:
    "{{ airflow_services }}"
  become:
    true

# https://docs.ansible.com/ansible/latest/modules/systemd_module.html
- name:
    "systemd : daemon reload"
  systemd:
    daemon_reload: "yes"
  become:
    true

# https://docs.ansible.com/ansible/latest/modules/service_module.html
- service:
    name: "airflow-{{ item.key }}"
    state: "{{ item.value.state | default(started) }}"
    enabled: "{{ item.value.enabled | default(yes) }}"
  with_dict:
    "{{ airflow_services }}"
  become:
    true

